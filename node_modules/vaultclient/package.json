{
  "_args": [
    [
      {
        "raw": "vaultclient@github:scality/vaultclient",
        "scope": null,
        "escapedName": "vaultclient",
        "name": "vaultclient",
        "rawSpec": "github:scality/vaultclient",
        "spec": "github:scality/vaultclient",
        "type": "hosted",
        "hosted": {
          "type": "github",
          "ssh": "git@github.com:scality/vaultclient.git",
          "sshUrl": "git+ssh://git@github.com/scality/vaultclient.git",
          "httpsUrl": "git+https://github.com/scality/vaultclient.git",
          "gitUrl": "git://github.com/scality/vaultclient.git",
          "shortcut": "github:scality/vaultclient",
          "directUrl": "https://raw.githubusercontent.com/scality/vaultclient/master/package.json"
        }
      },
      "/Users/przemek/github/S3"
    ]
  ],
  "_from": "scality/vaultclient",
  "_id": "vaultclient@7.0.0",
  "_inCache": true,
  "_location": "/vaultclient",
  "_phantomChildren": {},
  "_requested": {
    "raw": "vaultclient@github:scality/vaultclient",
    "scope": null,
    "escapedName": "vaultclient",
    "name": "vaultclient",
    "rawSpec": "github:scality/vaultclient",
    "spec": "github:scality/vaultclient",
    "type": "hosted",
    "hosted": {
      "type": "github",
      "ssh": "git@github.com:scality/vaultclient.git",
      "sshUrl": "git+ssh://git@github.com/scality/vaultclient.git",
      "httpsUrl": "git+https://github.com/scality/vaultclient.git",
      "gitUrl": "git://github.com/scality/vaultclient.git",
      "shortcut": "github:scality/vaultclient",
      "directUrl": "https://raw.githubusercontent.com/scality/vaultclient/master/package.json"
    }
  },
  "_requiredBy": [
    "/",
    "/utapi"
  ],
  "_resolved": "git://github.com/scality/vaultclient.git#c8a9ba431674e5e132286e039b28684690502007",
  "_shasum": "a6bfb365bc00b69b798c6c056b7bd8f0c9f192b0",
  "_shrinkwrap": null,
  "_spec": "vaultclient@github:scality/vaultclient",
  "_where": "/Users/przemek/github/S3",
  "author": {
    "name": "Giorgio Regni"
  },
  "bugs": {
    "url": "https://github.com/scality/vaultclient/issues"
  },
  "dependencies": {
    "arsenal": "github:scality/Arsenal",
    "commander": "2.9.0",
    "werelogs": "github:scality/werelogs",
    "xml2js": "0.4.17"
  },
  "description": "Client library and binary for Vault, the user directory and key management service",
  "devDependencies": {
    "babel-eslint": "4.1.8",
    "eslint": "1.10.3",
    "eslint-config-airbnb": "0.0.9",
    "eslint-config-scality": "github:scality/Guidelines",
    "mocha": "2.5.3"
  },
  "engines": {
    "node": "6.9.5"
  },
  "gitHead": "c8a9ba431674e5e132286e039b28684690502007",
  "homepage": "https://github.com/scality/vaultclient#readme",
  "license": "Apache-2.0",
  "main": "index.js",
  "name": "vaultclient",
  "optionalDependencies": {},
  "readme": "# Vault Client Library\n\n[![CircleCI][badgepub]](https://circleci.com/gh/scality/vaultclient)\n[![Scality CI][badgepriv]](http://ci.ironmann.io/gh/scality/vaultclient)\n\nThis repository provides a client library for any service that relies on\nVault. This repository also provides an cli binary to interact with Vault.\n\nThis client supports a part of the protocol described in Vault's\n[repository](https://github.com/scality/Vault/blob/master/Protocol.md). The\nrelevant parts are :\n\n- Create account\n- Generate account access key\n- List accounts\n- Delete account\n- Authenticate V2\n- Authenticate V4\n- Get email addresses\n- Get canonical ids\n\nYou can check our [quickstart guide](QUICKSTART.md).\n\n## Contributing\n\nIn order to contribute, please follow the\n[Contributing Guidelines](\nhttps://github.com/scality/Guidelines/blob/master/CONTRIBUTING.md).\n\n## Command-line usage\n\nFor general help, run:\n\n```sh\n$> ./bin/vaultclient -h\n```\n\nFor help on a specific command, run:\n\n```sh\n$> ./bin/vaultclient subcommand -h\n```\n\nExample:\n\n```sh\n$> ./bin/vaultclient create-account -h\n\n  Usage: create-account [options]\n\n  Options:\n\n    -h, --help             output usage information\n    --name <NAME>\n    --email <EMAIL>\n```\n\nSee [examples](./EXAMPLES.md) to have an overview of all available commands.\n\n### Command-line HTTPS support\n\nSee [examples](./EXAMPLES.md) to know how to set up https.\n\n### Command-line use of Vault administration credentials\n\nVault requires the use of AWS signature v4 and valid administration credentials\nin its administrative interfaces (that is, create, delete and list\naccounts, users and access keys). In order to make vaultcient use an\nadministrative credential (accessKey, secretKey) pair you must first create a\njson file like this:\n\n```\n{\n    \"accessKey\": \"<administrative access key for Vault>\",\n    \"secretKeyValue\": \"<administrative secret key for Vault>\"\n}\n```\n\nThere are three ways of passing the content of the file to vaultclient:\n\n1. Name the file `.vaultclient.conf` and place it in your home folder, that is: `~/.vaultclient.conf`\n\n2. Set environment variable `VAULT_CONFIG` with the path of the file: `export VAULT_CONFIG=<filepath>`\n\n3. Pass the filepath in the command line with option `--config`\n\nAn example of the third option is:\n\n```sh\n$ bin/vaultclient create-account --name account0 --email d3v@null \\\n                                 --config <path>\n```\n\n## Javascript API usage\n\nSee [examples](./EXAMPLES.md) to know how to set up and use the api\nfrom javascript code.\n\n### Javascript API HTTPS support\n\nThe programmatical client supports both the HTTP and HTTPS protocols. HTTP is\nthe default protocol. To enable HTTPS, set the constructor's argument ```useHttps```\nto true.\n\nSee [examples](./EXAMPLES.md) to know how to see all constructor arguments.\n\n```js\nconst vaultclient = require('vaultclient');\n\nconst client = new vaultclient.Client('auth.mydomain.com', 8500,\n    true, // This argument set up https\n);\n```\n\nTo enable two way https encryption, set the constructor argument ```cert```\nand ```key``` to the content of the client certificate. To use your own\ncertificate authority, set the constructor argument ```ca``` to the content of\nyour authority certificate.\n\n### Javascript API use of Vault administration credentials\n\nVault administrative credentials must be passed to the constructor if using\nan administrative route.\n\nSee [examples](./EXAMPLES.md) to know how to see all constructor arguments.\n\n```js\nconst vaultclient = require('vaultclient');\n\nconst client = new vaultclient.Client('auth.mydomain.com', 8500, false,\n    undefined, undefined, undefined, true, '7C66DCVN609K7ZHDBVZ0',\n    'JXxTT04NxiWb6NcES+rpkHnkXszDq3KxexocJIJ9');\n\nclient.createAccount('account0', { email: 'dev@null' }, (err, data) => {\n    console.log(data);\n});\n```\n\n[badgepub]: https://circleci.com/gh/scality/vaultclient.svg?style=svg\n[badgepriv]: http://ci.ironmann.io/gh/scality/vaultclient.svg?style=svg&circle-token=40f1e9fe0ad184248c37cbf3d89b164c35fd1667\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/scality/vaultclient.git"
  },
  "scripts": {
    "lint": "eslint $(git ls-files '*.js')",
    "lint_md": "mdlint $(git ls-files '*.md')",
    "lint_yml": "yamllint $(git ls-files '*.yml')",
    "start": "node client.js",
    "test": "mocha tests/unit"
  },
  "version": "7.0.0",
  "warnings": [
    {
      "code": "ENOTSUP",
      "required": {
        "node": "6.9.5"
      },
      "pkgid": "vaultclient@7.0.0"
    }
  ]
}
