'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _metricsHandlers = require('../handlers/metricsHandlers');

var _listMetrics = require('../validators/listMetrics');

var _listMetrics2 = require('../responses/listMetrics');

var _listMetrics3 = _interopRequireDefault(_listMetrics2);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = [{
    validator: _listMetrics.validateBucketsListMetrics,
    handler: _metricsHandlers.BucketsHandler.listMetrics,
    method: 'POST',
    action: 'ListMetrics',
    resource: 'buckets',
    responseBuilder: _listMetrics3.default,
    statusCode: 200
}, {
    validator: _listMetrics.validateBucketsListRecentMetrics,
    handler: _metricsHandlers.BucketsHandler.listRecentMetrics,
    method: 'POST',
    action: 'ListRecentMetrics',
    resource: 'buckets',
    responseBuilder: _listMetrics3.default,
    statusCode: 200
}, {
    validator: _listMetrics.validateAccountsListMetrics,
    handler: _metricsHandlers.AccountsHandler.listMetrics,
    method: 'POST',
    action: 'ListMetrics',
    resource: 'accounts',
    responseBuilder: _listMetrics3.default,
    statusCode: 200
}, {
    validator: _listMetrics.validateAccountsListRecentMetrics,
    handler: _metricsHandlers.AccountsHandler.listRecentMetrics,
    method: 'POST',
    action: 'ListRecentMetrics',
    resource: 'accounts',
    responseBuilder: _listMetrics3.default,
    statusCode: 200
}, {
    validator: _listMetrics.validateUsersListMetrics,
    handler: _metricsHandlers.UsersHandler.listMetrics,
    method: 'POST',
    action: 'ListMetrics',
    resource: 'users',
    responseBuilder: _listMetrics3.default,
    statusCode: 200
}, {
    validator: _listMetrics.validateUsersListRecentMetrics,
    handler: _metricsHandlers.UsersHandler.listRecentMetrics,
    method: 'POST',
    action: 'ListRecentMetrics',
    resource: 'users',
    responseBuilder: _listMetrics3.default,
    statusCode: 200
}, {
    validator: _listMetrics.validateServiceListMetrics,
    handler: _metricsHandlers.ServiceHandler.listMetrics,
    method: 'POST',
    action: 'ListMetrics',
    resource: 'service',
    responseBuilder: _listMetrics3.default,
    statusCode: 200
}, {
    validator: _listMetrics.validateServiceListRecentMetrics,
    handler: _metricsHandlers.ServiceHandler.listRecentMetrics,
    method: 'POST',
    action: 'ListRecentMetrics',
    resource: 'service',
    responseBuilder: _listMetrics3.default,
    statusCode: 200
}];